apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.realm.kotlin'

android {
    compileSdkVersion rootProject.compileSdkVersion
    namespace 'com.vp.detail'

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildFeatures {
        dataBinding {
            enabled = true
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        debugProguard {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            minifyEnabled true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(':dagger.addons')
    implementation project(':core_models')
    implementation "androidx.appcompat:appcompat:$rootProject.supportLibraryVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayout"
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.8.0'

    //glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glide"
    kapt "com.github.bumptech.glide:compiler:$rootProject.glide"

    //api
    implementation "com.google.code.gson:gson:$rootProject.gson"
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"

    //architecture components
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycle"

    //Realm Database
    implementation "io.realm.kotlin:library-base:$rootProject.realm"
    implementation "io.realm.kotlin:library-sync:$rootProject.realm"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines"

    //Ktx
    implementation "androidx.fragment:fragment-ktx:$rootProject.fragment_ktx"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.viewmodel_ktx"


    //dagger
    implementation "com.google.dagger:dagger:$rootProject.dagger"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"
    implementation "com.google.dagger:dagger-android:$rootProject.dagger"
    implementation("com.google.dagger:dagger-android-support:$rootProject.dagger")
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    testImplementation "org.mockito:mockito-core:4.11.0"
    testImplementation "com.squareup.retrofit2:retrofit-mock:$rootProject.retrofit"
    testImplementation "org.assertj:assertj-core:3.24.2"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.coroutines"
}
